#!/usr/bin/env python3
"""
client.py

A simple TCP client for the chat application.
It connects to the server, receives its welcome message (with an assigned client name),
and then enters a loop to send messages.
Commands:
  - Any text: The server echoes it back with "ACK" appended.
  - "status": Request the server's connection cache.
  - "exit": Disconnect from the server.
"""

import socket

def main():
    server_host = "127.0.0.1"  # Change if needed.
    server_port = 12345

    # Create a TCP socket and connect to the server.
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((server_host, server_port))
    
    # Display local connection details.
    local_ip, local_port = sock.getsockname()
    print(f"Connected to server at {server_host}:{server_port} from local address {local_ip}:{local_port}")

    # Receive and display the welcome message.
    welcome_msg = sock.recv(1024).decode('utf-8')
    print("Server:", welcome_msg)

    while True:
        message = input("Enter message (or command): ")
        sock.sendall(message.encode())

        if message.lower() == "exit":
            # Get the goodbye message from the server and exit.
            response = sock.recv(1024).decode('utf-8')
            print("Server:", response)
            break

        # Receive and print the server's response.
        response = sock.recv(4096).decode('utf-8')
        print("Server:", response)

    sock.close()

if __name__ == "__main__":
    main()
